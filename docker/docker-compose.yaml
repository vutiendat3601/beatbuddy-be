version: '3.7'
name: beatbuddy
services:
  # #: API
  apiredis:
    image: redis:7.0-bookworm
    hostname: apiredis
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=beatbuddyapiredis
    networks:
      - beatbuddy
  apidb:
    image: bitnami/postgresql:16.1.0
    hostname: apidb
    environment:
      - POSTGRES_DB=beatbuddyapidb
      - POSTGRES_USER=beatbuddyapidb
      - POSTGRES_PASSWORD=beatbuddyapidb
      - PGPASSWORD=beatbuddyapidb
    ports:
      - 5432:5432
    volumes:
      - beatbuddyapidb:/bitnami/postgresql
      - ./api/db/initdb.d/:/docker-entrypoint-initdb.d/
      - ./api/db/backup/:/backup/
      - ./api/db/backup.sh:/backup.sh
    networks:
      - beatbuddy
  api:
    image: vutiendat3601/beatbuddy-api:1.0.0
    hostname: api
    environment:
      - DB_URL=jdbc:postgresql://apidb:5432/beatbuddyapidb
      - DB_USER=beatbuddyapidb
      - DB_PASS=beatbuddyapidb
      - FLYWAY_BASELINE_VERSION=1
      - JWKS_URI=http://beatbuddyauth.datvu.tech/realms/beatbuddy/protocol/openid-connect/certs
      - REDIS_HOST=apiredis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=beatbuddyapiredis
      - PORT=8080
      - BEAT_BUDDY_API_CLIENT_SECRET=OlgAtZaj5SRia4YWBvKPok07rfGUKSoP
    ports:
      - 8080
    volumes:
      - beatbuddyapi:/root/beatbuddy
    depends_on:
      - apiredis
      - apidb
    networks:
      - beatbuddy
  # # API

  # ## Storage
  storage:
    image: vutiendat3601/beatbuddy-storage:1.0.0
    hostname: storage
    environment:
      - JWKS_URI=http://beatbuddyauth.datvu.tech/realms/beatbuddy/protocol/openid-connect/certs
      - PORT=8081
    ports:
      - 8081
    volumes:
      - beatbuddystorage:/root/beatbuddy
    networks:
      - beatbuddy

  # #: Auth
  authdb:
    image: postgres:16.1-bookworm
    hostname: authdb
    environment:
      - POSTGRESQL_USERNAME=beatbuddyauthdb
      - POSTGRESQL_DATABASE=beatbuddyauthdb
      - POSTGRES_PASSWORD=beatbuddyauthdb
      - PGPASSWORD=beatbuddyauthdb
    volumes:
      - beatbuddyauthdb:/var/lib/postgresql/data
      # - ./auth/db/initdb.d/:/docker-entrypoint-initdb.d/
      # - ./auth/db/backup/:/backup/
      # - ./auth/db/backup.sh:/backup.sh
    networks:
      - beatbuddy
  auth:
    image: quay.io/keycloak/keycloak:23.0.4
    hostname: auth
    volumes:
      - ./auth/realms/:/opt/keycloak/data/import/
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=123456Aa@
      - KEYCLOAK_DATABASE_VENDOR=postgres
      - KEYCLOAK_DATABASE_HOST=authdb
      - KEYCLOAK_DATABASE_SCHEMA=public
      - KEYCLOAK_DATABASE_NAME=beatbuddyauthdb
      - KEYCLOAK_DATABASE_USER=beatbuddyauthdb
      - KEYCLOAK_DATABASE_PASSWORD=beatbuddyauthdb
      - KC_HOSTNAME_URL=http://beatbuddyauth.datvu.tech
      - KC_HOSTNAME_ADMIN_URL=http://beatbuddyauth.datvu.tech
      - KC_PROXY=passthrough
    depends_on:
      - authdb
    networks:
      - beatbuddy
    command: ['start-dev', '--import-realm']
  # # Auth

  # ## Proxy
  proxy:
    image: nginx:mainline-bookworm
    hostname: proxy
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - beatbuddystorage:/usr/share/nginx/static/
    ports:
      - '80:80'
    depends_on:
      - auth
      - api
      - storage
    networks:
      - beatbuddy
    healthcheck:
      test: curl http://api:8080 && curl http://auth:8080 && curl http://storage:8080
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    restart: on-failure
volumes:
  beatbuddyapidb:
    name: beatbuddyapidb
    driver: local
  beatbuddyapi:
    name: beatbuddyapi
    driver: local
  beatbuddyauthdb:
    name: beatbuddyauthdb
    driver: local
  beatbuddystorage:
    name: beatbuddystorage
    driver: local
networks:
  beatbuddy:
    name: beatbuddy
    driver: bridge
